PART II
1. Encoding
How to Run:
To run the Encoding function you mus type in "python encode.py arg1" into the command line

Inputs:
this program takes in a single value arg1
arg1: should be  a single integer n (cannot be less than 4) value. Example: 4

Outputs:
 The function produces an x vector, A0 matrix, A1 matrix, y0 vector, y1 vector, and yStream


2. Jacobi/Gauss-Seidel (Standard)
How to Run:
There are two iterative method functions
-To run the Jacobi function you mus type in "python Jacobi.py arg1 arg2" into the command line.
-To run the Gauss_Seidel function you mus type in "python Gauss_Seidel.py arg1 arg2" into the command line.

Inputs:
These two functions take in a dat file that contains an nxn matrix A and an nx1 vector b, a tolerance threshhold, and when run, will ask for the user input to get an initial guess vector.

arg1: The filename of the dat file containing the matrix A and vector b. Example: c.dat
arg2: a float tolerance thershold. Example: 1e-8
The program will also ask for a user inputted guess vector which must be equal to the amount of rows of the entered matrix, and should be separated by zeroes. Example: 0 0 0 0 (if there are 4 rows in the matrix)

Outputs:
 This will report the number of iterations and the final answer, or that the method did not converge after 100 iterations.

3. Decoding
How to Run: To run the Decoding function you must type in "python Decode.py" into the command line.

Inputs:
Running the program will prompt the user to enter the y0 and y1 of the y stream (length cannot be less than 4). Enter both streams by separating the stream values by spaces. Example: 1 0 0 0 1 0 1 0

Outputs:

There are two functions that both take a single yStream (whose length cannot be less than 4). One uses the Jacobi iteraitve method, and one uses Gauss-Seidel. The code will create an A0 and A1 based on n and iterate it to return an xStream. It will print the inputs, the x stream, and the number iterations it took with the jacobi method and the gauss_seidel method.